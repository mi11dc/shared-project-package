import { Component, EventEmitter, Input, Output } from '@angular/core';
import { Validators } from '@angular/forms';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "../core/_services/auth.services";
import * as i3 from "@ionic/angular";
import * as i4 from "../../ui-shared/label/label.component";
import * as i5 from "../../ui-shared/input/input.component";
import * as i6 from "../../ui-shared/span/span.component";
import * as i7 from "@angular/common";
export class LoginComponent {
    constructor(FB, auth) {
        this.FB = FB;
        this.auth = auth;
        this.position = 'floating';
        this.mode = "mode";
        this.loginApiOutput = new EventEmitter();
        this.emailValidation = "^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$";
        this.passwordValidation = "^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$";
        this.setDefaultData();
    }
    get f() {
        return this.loginForm.controls;
    }
    ngOnInit() { }
    setDefaultData() {
        this.isFormSubmit = false;
        this.loginForm = this.FB.group({
            email: ['', [
                    Validators.required,
                    Validators.pattern(this.emailValidation)
                ]],
            password: ['', [
                    Validators.required,
                    Validators.pattern(this.passwordValidation)
                ]]
        });
    }
    setEmitData(data, type) {
        switch (type.toString().toLowerCase()) {
            case 'email':
                this.f.email.setValue(data);
                break;
            case 'password':
                this.f.password.setValue(data);
                break;
            default:
                break;
        }
    }
    submitForm() {
        this.isFormSubmit = true;
        if (this.loginForm.invalid) {
            return;
        }
        this.auth.SignIn(this.f.email.value, this.f.password.value).then(res => {
            this.loginApiOutput.next({
                isApiCalled: true,
                isApiSuccess: true,
                response: res
            });
            console.log('You\'re in!', res);
        }).catch(err => {
            this.loginApiOutput.next({
                isApiCalled: true,
                isApiSuccess: false,
                response: err
            });
            console.log('Something went wrong:', err.message);
        });
    }
}
LoginComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: LoginComponent, deps: [{ token: i1.FormBuilder }, { token: i2.AuthService }], target: i0.ɵɵFactoryTarget.Component });
LoginComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.2.7", type: LoginComponent, selector: "shared-login", inputs: { position: "position", mode: "mode" }, outputs: { loginApiOutput: "loginApiOutput" }, ngImport: i0, template: "<ion-content>\n  <form [formGroup]=\"loginForm\" (ngSubmit)=\"submitForm()\" novalidate>\n    <ion-item lines=\"full\" [mode]=\"mode\">\n      <ui-label [text]=\"'Email'\" [position]=\"position\" [mode]=\"mode\"></ui-label>\n      <ui-input class=\"width-100\" [mode]=\"mode\"\n        [type]=\"'text'\" [required]=\"true\" formControlName=\"email\"\n        [placeholder]=\"'Enter email'\" (newValue)=\"setEmitData($event, 'email')\"\n      ></ui-input>\n      <small *ngIf=\"isFormSubmit && f.email.errors\">\n        <ui-span *ngIf=\"f.email.errors.required\" [text]=\"'Email is required'\" [color]=\"'danger'\" [mode]=\"mode\"></ui-span>\n        <ui-span *ngIf=\"f.email.errors.pattern\" [text]=\"'Email is invalid'\" [color]=\"'danger'\" [mode]=\"mode\"></ui-span>\n      </small>\n    </ion-item>\n    <ion-item lines=\"full\" [mode]=\"mode\">\n      <ui-label [text]=\"'Password'\" [position]=\"position\" [mode]=\"mode\"></ui-label>\n      <ui-input class=\"width-100\" [mode]=\"mode\"\n        [type]=\"'password'\" [required]=\"true\" formControlName=\"password\"\n        [placeholder]=\"'Enter password'\" (newValue)=\"setEmitData($event, 'password')\"\n      ></ui-input>\n      <small *ngIf=\"isFormSubmit && f.password.errors\">\n        <ui-span *ngIf=\"f.password.errors.required\" [text]=\"'Password is required'\" [color]=\"'danger'\" [mode]=\"mode\"></ui-span>\n        <ui-span *ngIf=\"f.password.errors.pattern\" [text]=\"'Password is invalid'\" [color]=\"'danger'\" [mode]=\"mode\"></ui-span>\n      </small>\n    </ion-item>\n    <ion-row>\n      <ion-col>\n        <ion-button type=\"submit\" color=\"primary\" expand=\"block\" [mode]=\"mode\">Sign In</ion-button>\n      </ion-col>\n    </ion-row>\n  </form>\n</ion-content>", styles: [".show-option,.hide-option{font-size:1.2rem;display:block;justify-content:center}\n"], components: [{ type: i3.IonContent, selector: "ion-content", inputs: ["color", "forceOverscroll", "fullscreen", "scrollEvents", "scrollX", "scrollY"] }, { type: i3.IonItem, selector: "ion-item", inputs: ["button", "color", "counter", "counterFormatter", "detail", "detailIcon", "disabled", "download", "fill", "href", "lines", "mode", "rel", "routerAnimation", "routerDirection", "shape", "target", "type"] }, { type: i4.LabelComponent, selector: "ui-label", inputs: ["text", "class", "color", "position", "mode"] }, { type: i5.InputComponent, selector: "ui-input", inputs: ["placeholder", "type", "name", "color", "readonly", "required", "mode", "disabled", "value"], outputs: ["newValue"] }, { type: i6.SpanComponent, selector: "ui-span", inputs: ["text", "class", "color", "mode"] }, { type: i3.IonRow, selector: "ion-row" }, { type: i3.IonCol, selector: "ion-col", inputs: ["offset", "offsetLg", "offsetMd", "offsetSm", "offsetXl", "offsetXs", "pull", "pullLg", "pullMd", "pullSm", "pullXl", "pullXs", "push", "pushLg", "pushMd", "pushSm", "pushXl", "pushXs", "size", "sizeLg", "sizeMd", "sizeSm", "sizeXl", "sizeXs"] }, { type: i3.IonButton, selector: "ion-button", inputs: ["buttonType", "color", "disabled", "download", "expand", "fill", "href", "mode", "rel", "routerAnimation", "routerDirection", "shape", "size", "strong", "target", "type"] }], directives: [{ type: i1.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }, { type: i1.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i7.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: LoginComponent, decorators: [{
            type: Component,
            args: [{ selector: 'shared-login', template: "<ion-content>\n  <form [formGroup]=\"loginForm\" (ngSubmit)=\"submitForm()\" novalidate>\n    <ion-item lines=\"full\" [mode]=\"mode\">\n      <ui-label [text]=\"'Email'\" [position]=\"position\" [mode]=\"mode\"></ui-label>\n      <ui-input class=\"width-100\" [mode]=\"mode\"\n        [type]=\"'text'\" [required]=\"true\" formControlName=\"email\"\n        [placeholder]=\"'Enter email'\" (newValue)=\"setEmitData($event, 'email')\"\n      ></ui-input>\n      <small *ngIf=\"isFormSubmit && f.email.errors\">\n        <ui-span *ngIf=\"f.email.errors.required\" [text]=\"'Email is required'\" [color]=\"'danger'\" [mode]=\"mode\"></ui-span>\n        <ui-span *ngIf=\"f.email.errors.pattern\" [text]=\"'Email is invalid'\" [color]=\"'danger'\" [mode]=\"mode\"></ui-span>\n      </small>\n    </ion-item>\n    <ion-item lines=\"full\" [mode]=\"mode\">\n      <ui-label [text]=\"'Password'\" [position]=\"position\" [mode]=\"mode\"></ui-label>\n      <ui-input class=\"width-100\" [mode]=\"mode\"\n        [type]=\"'password'\" [required]=\"true\" formControlName=\"password\"\n        [placeholder]=\"'Enter password'\" (newValue)=\"setEmitData($event, 'password')\"\n      ></ui-input>\n      <small *ngIf=\"isFormSubmit && f.password.errors\">\n        <ui-span *ngIf=\"f.password.errors.required\" [text]=\"'Password is required'\" [color]=\"'danger'\" [mode]=\"mode\"></ui-span>\n        <ui-span *ngIf=\"f.password.errors.pattern\" [text]=\"'Password is invalid'\" [color]=\"'danger'\" [mode]=\"mode\"></ui-span>\n      </small>\n    </ion-item>\n    <ion-row>\n      <ion-col>\n        <ion-button type=\"submit\" color=\"primary\" expand=\"block\" [mode]=\"mode\">Sign In</ion-button>\n      </ion-col>\n    </ion-row>\n  </form>\n</ion-content>", styles: [".show-option,.hide-option{font-size:1.2rem;display:block;justify-content:center}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.FormBuilder }, { type: i2.AuthService }]; }, propDecorators: { position: [{
                type: Input
            }], mode: [{
                type: Input
            }], loginApiOutput: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,